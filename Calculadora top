#include <stdio.h>
#include <string.h>
#include <math.h>

double coeficiente(char j[100]){//acha o coeficiente que multiplica por x
    double a = 0, b = 0;
    int i = 0, d = 0, c = 0;
    
    while(j[i]>='0'&&j[i]<='9'){
        i++;
    }
    if(j[i] == '.'){
        c=i;
        c++;
        while(j[c]!= '\0'){
            d++;
            c++;
        }
    }
    for(int c = 0; c<i; c++){
        a += (j[c]-'0')*pow(10, i-c-1);
    }
    for(int c = i+1; c<=d+i; c++){
        b+= (j[c]-'0')*pow(10, i-c);
    }
    a += b;
    return a;
}

double f1(char j[100]){
    int a = strlen(j);
    double coef = 0;
    int c = 0;
    char s[100];
    double z;
    for(int i = 0; i<a; i++){
        if(j[i]>=48&&j[i]<=57||j[i]=='.'){
            c = i;
            while(j[c]>=48&&j[c]<=57||j[i]=='.'){
                c++;
            }
            for(int k = 0;i<c;i++, k++){
                s[k] = j[i];
            }
            coef = coeficiente(s);
        }
        /*switch(j[i]){
            case 'x':
            break;
            case '1':
                z = 1;
            break;
            case '2':
                z = 2;
            break;
            case '3':
                z = 3;
            break;
            case '4':
                z = 4;
            break;
            case '5':
                z = 5;
            break;
            case '6':
                z = 6;
            break;
            case '7':
                z = 7;
            break;
            case '8':
                z = 8;
            break;
            case '9':
                z = 9;
            break;
            case '0':
                z = 0;
            break;
            case '*':
                
            break;
            case '-':
            break;
            case '+':
            break;
            case '/':
            break;
            case ' ':
            break;
            case '.':
            break;
            case '(':
            break;
            case ')':
            break;
        }
    }*/
    
    return coef;
}

/*
void deriv(char j[100]){
    int a = 0;
    char k[100];
    double x = 0;
    double z;
    
    return;
}
*/
double f(double x){
    return f1(fun);
}
double integ(char j[100], double a, double b){
	int np = 10000;
	double h = (b-a)/np;
	double xk = a, xk1 = a+h;
	double ff=0;
	
	for(int i = 0; i<np; i++){
		ff += f(xk) + 4*f((xk+xk1)/2) + f(xk1);
		xk = xk1;
		xk1 += h;
	}
	ff = (h/6)*ff;
    return ff;    
}
/*
void bissec(char j[100], int a, int b){
    return;
}
void secante(char j[100]){
    
}
void newton(char j[100]){
    
}
void lagrange(char j[100]){
    
}
*/
int main()
{
    char fun[100] = "\0";
    int a = 0, b = 0;
    double y = 0;
    double z = 0;
    double intervalo1, intervalo2;
    double integral = 0;
    
    printf("Olá, bem vindo! O que deseja calcular?\n1 - Derivada\n2 - Integral Numérica\n3- Raiz por bissecção\n");
    printf("4 - Raiz por secante\n5- Raiz por Newton\n6 - Polinômio de Lagrange\n");
    scanf("%d", &b);
    switch(b){
        /*case 1:
            printf("f(x) = ");
            scanf("%s", fun);
            deriv(fun);
        break;
        case 2:
            printf("f(x) = ");
            scanf("%s", fun);
            printf("Intervalo inicial: ");
            scanf("%lf", &intervalo1);
            printf("Intervalo final: ");
            scanf("%lf", &intervalo2);
            integral = integ(fun, intervalo1, intervalo2);
            printf("%lf\n", integral);
        break;
        case 3:
        break;
        case 4:
        break;
        case 5:
        break;*/
        case 8:
        scanf("%s", fun);
        printf("%lf", f(fun));
        break;
    }
        z = f(fun);
    /*for(int i = 0; i<a; i++){
        switch(fun[i]){
            case 'x':
                ;
            break;
            case '1':
                z = 1;
            break;
            case '2':
                z = 2;
            break;
            case '3':
                z = 3;
            break;
            case '4':
                z = 4;
            break;
            case '5':
                z = 5;
            break;
            case '6':
                z = 6;
            break;
            case '7':
                z = 7;
            break;
            case '8':
                z = 8;
            break;
            case '9':
                z = 9;
            break;
            case '0':
                z = 0;
            break;
            case '*':
                
            break;
            case '-':
            break;
            case '+':
            break;
            case '/':
            break;
            case ' ':
            break;
            case '.':
            break;
            case '(':
            break;
            case ')':
            break;
        }
    }*/

    return 0;
}
